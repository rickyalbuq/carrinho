{"version":3,"sources":["utils/useTranslation.ts","styles/globals.ts","utils/usePersistedState.ts","styles/themes/common.ts","styles/themes/light.ts","styles/themes/dark.ts","utils/useHandleTheme.ts","components/Home/styles.ts","components/Home/index.tsx","components/Error/styles.ts","components/Error/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["useTranslation","useState","language","setLanguage","loading","setLoading","useEffect","navigator","split","locales","en","pt","a","intl","init","currentLocale","then","createGlobalStyle","theme","colors","bgLow","txtMedium","usePersistedState","key","initialState","storageValue","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","common","turquoise","green","yellow","orange","red","magenta","pink","purple","blue","cyan","fontSizes","xxs","rem","xs","sm","md","lg","xl","xxl","lineHeights","list","paragraph","heading","link","spacings","huge","shadows","card","radius","light","title","bgMedium","bgHigh","txtLow","txtHigh","dark","useHandleTheme","setTheme","handleTheme","useCallback","prev","TitleWrapper","styled","div","css","Home","useContext","ThemeContext","get","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","onHandleColor","onColor","offHandleColor","offColor","Error","status","page","Routes","path","exact","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b97c8d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport intl from 'react-intl-universal';\n\nimport en from '../locales/en.json';\nimport pt from '../locales/pt.json';\nimport Common from '../locales/common';\n\ninterface LocalesType {\n  [key: string]: Common;\n}\n\nconst useTranslation = (): boolean => {\n  const [language, setLanguage] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    //setLanguage('en');\n    setLanguage(navigator.language.split('-', 1)[0] || 'pt');\n\n    const locales: LocalesType = {\n      en: en,\n      pt: pt,\n    };\n\n    (async () =>\n      await intl\n        .init({\n          currentLocale: locales[language] ? language : 'pt',\n          locales,\n        })\n        .then(() => setLoading(false)))();\n  }, [language, setLanguage, setLoading]);\n\n  return loading;\n};\n\nexport default useTranslation;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  :root {\n    font-size: 16px;\n  }\n  \n  * {\n    margin: 0;\n    padding: 0;\n    font-weight: 400;\n    box-sizing: border-box;\n  }\n  \n  body {\n    background: ${({ theme }) => theme.colors.bgLow};\n    color: ${({ theme }) => theme.colors.txtMedium};\n    font-family: 'Poppins', sans-serif;\n  }\n`;\n","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    return storageValue ? JSON.parse(storageValue) : initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import { rem } from 'polished';\n\nconst common = {\n  colors: {\n    turquoise: '#65CBA0',\n    green: '#92D655',\n    yellow: '#CCAF4E',\n    orange: '#E2673E',\n    red: '#BD271B',\n    magenta: '#B22A66',\n    pink: '#B532B1',\n    purple: '#6A1F99',\n    blue: '#245BC8',\n    cyan: '#376E82',\n  },\n\n  fontSizes: {\n    xxs: rem(12),\n    xs: rem(14),\n    sm: rem(16),\n    md: rem(24),\n    lg: rem(32),\n    xl: rem(40),\n    xxl: rem(48),\n  },\n\n  lineHeights: {\n    list: '160%',\n    paragraph: '140%',\n    heading: '120%',\n    link: '100%',\n  },\n\n  spacings: {\n    xxs: rem(4),\n    xs: rem(8),\n    sm: rem(16),\n    md: rem(24),\n    lg: rem(32),\n    xl: rem(40),\n    xxl: rem(56),\n    huge: rem(104),\n  },\n\n  shadows: {\n    card: 'inset 0px 4px 4px #1C1E23',\n  },\n\n  radius: {\n    xs: rem(4),\n    sm: rem(8),\n    md: rem(12),\n    lg: rem(16),\n    xl: rem(20),\n  },\n};\n\nexport default common;\n","import { DefaultTheme } from 'styled-components';\nimport common from './common';\n\nconst light: DefaultTheme = {\n  title: 'light',\n  ...common,\n  colors: {\n    bgLow: '#E0E0E0',\n    bgMedium: '#EEEEEE',\n    bgHigh: '#FAFAFA',\n    txtLow: '#BDBDBD',\n    txtMedium: '#757575',\n    txtHigh: '#424242',\n    ...common.colors,\n  },\n};\n\nexport default light;\n","import { DefaultTheme } from 'styled-components';\nimport common from './common';\n\nconst dark: DefaultTheme = {\n  title: 'dark',\n  ...common,\n  colors: {\n    bgLow: '#1C1E23',\n    bgMedium: '#282A31',\n    bgHigh: '#3F424D',\n    txtLow: '#434343',\n    txtMedium: '#A2A2A2',\n    txtHigh: '#D0D0D0',\n    ...common.colors,\n  },\n};\n\nexport default dark;\n","import { useCallback } from 'react';\nimport { DefaultTheme } from 'styled-components';\nimport usePersistedState from './usePersistedState';\n\nimport light from '../styles/themes/light';\nimport dark from '../styles/themes/dark';\n\ninterface Response {\n  handleTheme(): void;\n  theme: DefaultTheme;\n}\n\nconst useHandleTheme = (): Response => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('theme', dark);\n\n  const handleTheme = useCallback(() => {\n    setTheme((prev) => (prev.title === 'light' ? dark : light));\n  }, [setTheme]);\n\n  return { theme, handleTheme };\n};\n\nexport default useHandleTheme;\n","import styled, { css } from 'styled-components';\n\nexport const TitleWrapper = styled.div(\n  ({ theme }) => css`\n    height: 100vh;\n    width: 100vw;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    background: ${theme.colors.bgLow};\n    color: ${theme.colors.txtLow};\n\n    > h1 {\n      color: ${theme.colors.txtHigh};\n      font-size: ${theme.fontSizes.xxl};\n      line-height: ${theme.lineHeights.heading};\n    }\n\n    > p {\n      margin-bottom: ${theme.spacings.lg};\n    }\n  `,\n);\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\nimport { ThemeContext } from 'styled-components';\nimport intl from 'react-intl-universal';\n\nimport { TitleWrapper } from './styles';\n\ninterface Props {\n  handleTheme(): void;\n}\n\nconst Home: React.FC<Props> = ({ handleTheme }) => {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <TitleWrapper>\n      <h1>{intl.get('home.title')}</h1>\n      <p>{intl.get('home.subtitle')}</p>\n\n      <Switch\n        onChange={handleTheme}\n        checked={theme.title === 'light'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        height={10}\n        width={40}\n        handleDiameter={20}\n        onHandleColor={theme.colors.txtHigh}\n        onColor={theme.colors.txtMedium}\n        offHandleColor={theme.colors.bgHigh}\n        offColor={theme.colors.bgMedium}\n      />\n    </TitleWrapper>\n  );\n};\n\nexport default Home;\n","import styled, { css } from 'styled-components';\n\nexport const TitleWrapper = styled.div(\n  ({ theme }) => css`\n    height: 100vh;\n    width: 100vw;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    background: ${theme.colors.bgLow};\n    color: ${theme.colors.txtLow};\n\n    > h1 {\n      color: ${theme.colors.txtHigh};\n      font-size: ${theme.fontSizes.xxl};\n      line-height: ${theme.lineHeights.heading};\n    }\n\n    > p {\n      margin-bottom: ${theme.spacings.lg};\n    }\n  `,\n);\n","import React from 'react';\nimport intl from 'react-intl-universal';\n\nimport { TitleWrapper } from './styles';\n\ninterface Props {\n  status: string;\n}\n\nconst Error: React.FC<Props> = ({ status }) => {\n  const page = status === '404' ? 'msg404' : 'msg500';\n\n  return (\n    <TitleWrapper>\n      <h1>{`${status}!`}</h1>\n      <p>{intl.get(`errors.${page}`)}</p>\n    </TitleWrapper>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/globals';\nimport useHandleTheme from './utils/useHandleTheme';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport intl from 'react-intl-universal';\n\nimport Home from './components/Home';\nimport Error from './components/Error';\n\nconst Routes: React.FC = () => {\n  const { theme, handleTheme } = useHandleTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router>\n        <Switch>\n          <Route path={intl.get('routes.home')} exact>\n            <Home handleTheme={handleTheme} />\n          </Route>\n          <Route path={intl.get('routes.error')} exact>\n            <Error status=\"404\" />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport useTranslation from './utils/useTranslation';\n\nimport Routes from './routes';\n\nfunction App() {\n  const loading = useTranslation();\n\n  return (\n    <>\n      {!loading ? (\n        <div className=\"App\">\n          <Routes />\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}